// package main

// import (
// 	"context"
// 	"fmt"
// 	"log"
// 	"time"

// 	"go.mongodb.org/mongo-driver/bson"
// 	"go.mongodb.org/mongo-driver/bson/primitive"
// 	"go.mongodb.org/mongo-driver/mongo"
// 	"go.mongodb.org/mongo-driver/mongo/options"
// )

// type Status string

// const (
// 	Done     = "Done"
// 	Progress = "Progress"
// 	ToDo     = "ToDo"
// 	Failed   = "Failed"
// )

// type MyClient struct {
// 	*mongo.Client
// }

// type Task struct {
// 	ID        primitive.ObjectID `bson:"_id"`
// 	Title     string             `bson:"title"`
// 	DateBegin time.Time          `bson:"dateBegin"`
// 	Status    Status             `bson:"status"`
// }

// func Connect() *mongo.Client {
// 	clientOptions := options.Client().ApplyURI("mongodb://Arnaud:pass@localhost/testing")
// 	client, err := mongo.Connect(context.TODO(), clientOptions)

// 	if err != nil {
// 		log.Fatal(err)
// 	}

// 	err = client.Ping(context.TODO(), nil)

// 	if err != nil {
// 		log.Fatal(err)
// 	}

// 	fmt.Println("Connected to MongoDB!")
// 	return client
// }

// func (client MyClient) GetAllTasks() {
// 	usersCollection := client.Database("testing").Collection("users")
// 	cur, err := usersCollection.Find(context.TODO(), bson.D{})
// 	if err != nil {
// 		log.Fatal(err)
// 	}
// 	defer cur.Close(context.TODO())
// 	for cur.Next(context.TODO()) {
// 		//print element data from collection
// 		var a Task
// 		cur.Decode(&a)
// 	}
// 	if err := cur.Err(); err != nil {
// 		log.Fatal(err)
// 	}
// }

// func (client MyClient) NewTask(data Task) error {
// 	usersCollection := client.Database("testing").Collection("users")
// 	_, err := usersCollection.InsertOne(context.TODO(), data)
// 	return err
// }
